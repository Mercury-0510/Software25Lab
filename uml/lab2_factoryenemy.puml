@startuml factoryenemy

interface EnemyAircraftFactory {
    + createEnemyAircraft() : MobEnemy
}

class NormalEnemyFactory {
    + createEnemyAircraft() : MobEnemy
}

class EliteEnemyFactory {
    + createEnemyAircraft() : MobEnemy
}

class BossFactory {
    + createEnemyAircraft() : MobEnemy
}

class SuperEnemyFactory {
    + createEnemyAircraft() : MobEnemy
}

abstract class MobEnemy {
    - score : int
    + getScore() : int
}

class NormalEnemy {
    + shoot() : List<BaseBullet>
}

class EliteEnemy {
    + shoot() : List<BaseBullet>
}

class Boss {
    + shoot() : List<BaseBullet>
}

class SuperEnemy {
    + shoot() : List<BaseBullet>
}

class EnemyGenerator {
    - {static} enemyFactory : EnemyAircraftFactory
    + {static} createNormalEnemy() : MobEnemy
    + {static} createEliteEnemy() : MobEnemy
    + {static} createBoss() : MobEnemy
    + {static} createSuperEnemy() : MobEnemy
}

EnemyAircraftFactory <|.. NormalEnemyFactory
EnemyAircraftFactory <|.. EliteEnemyFactory
EnemyAircraftFactory <|.. BossFactory
EnemyAircraftFactory <|.. SuperEnemyFactory

EnemyGenerator --> EnemyAircraftFactory : uses

MobEnemy <|-- NormalEnemy
MobEnemy <|-- EliteEnemy
MobEnemy <|-- Boss
MobEnemy <|-- SuperEnemy

NormalEnemyFactory ..> NormalEnemy : creates
EliteEnemyFactory ..> EliteEnemy : creates
BossFactory ..> Boss : creates
SuperEnemyFactory ..> SuperEnemy : creates

@enduml