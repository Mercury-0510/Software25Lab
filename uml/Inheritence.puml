@startuml Inheritence

' 顶层抽象类 - 所有可飞行对象的基类
abstract class AbstractFlyingObject {
    # locationX : int
    # locationY : int
    # speedX : int
    # speedY : int
    # image : BufferedImage
    # isValid : boolean
    + forward() : void
    + crash(flyingObject) : boolean
    + vanish() : void
    + getLocationX() : int
    + getLocationY() : int
}

' ==================== 飞机类层次 ====================

' 飞机抽象类
abstract class AbstractAircraft {
    # maxHp : int
    # hp : int
    # power : int
    # direction : int
    # shootStrategy : ShootStrategy
    + decreaseHp(decrease) : void
    + getHp() : int
    + getMaxHp() : int
    + setShootStrategy(strategy) : boolean
    + {abstract} shoot() : List<BaseBullet>
    + getPower() : int
    + getDirection() : int
}

' 英雄机 - 单例模式
class HeroAircraft {
    - {static} instance : HeroAircraft
    - HeroAircraft()
    + {static} getInstance() : HeroAircraft
    + shoot() : List<BaseBullet>
}

' 敌机抽象类
abstract class MobEnemy {
    - score : int
    + getScore() : int
}

' 普通敌机 - 不会射击
class NormalEnemy {
    + shoot() : List<BaseBullet>
}

' 精英敌机 - 直线射击
class EliteEnemy {
    + shoot() : List<BaseBullet>
}

' BOSS敌机 - 环形射击
class Boss {
    + shoot() : List<BaseBullet>
}

' 超级敌机 - 散射
class SuperEnemy {
    + shoot() : List<BaseBullet>
}

' ==================== 子弹类层次 ====================

' 子弹抽象类
abstract class BaseBullet {
    - power : int
    + forward() : void
    + getPower() : int
}

' 英雄子弹
class HeroBullet {
    + HeroBullet(locationX, locationY, speedX, speedY, power)
}

' 敌机子弹
class EnemyBullet {
    + EnemyBullet(locationX, locationY, speedX, speedY, power)
}

' ==================== 道具类层次 ====================

' 道具抽象类
abstract class BaseProp {
    # power : int
    + forward() : void
    + {abstract} active(aircraft) : void
}

' 血包道具 - 恢复生命值
class BloodProp {
    + active(aircraft) : void
}

' 炸弹道具 - 清屏攻击
class BombProp {
    + active(aircraft) : void
}

' 子弹道具 - 提升单发火力
class BulletProp {
    + active(aircraft) : void
}

' 子弹加强道具 - 提升射击数量
class BulletPlusProp {
    + active(aircraft) : void
}

' ==================== 继承关系 ====================

' AbstractFlyingObject 的三个直接子类
AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- BaseProp

' AbstractAircraft 的两个分支
AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- MobEnemy

' MobEnemy 的四种具体敌机
MobEnemy <|-- NormalEnemy
MobEnemy <|-- EliteEnemy
MobEnemy <|-- Boss
MobEnemy <|-- SuperEnemy

' BaseBullet 的两种子弹
BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

' BaseProp 的四种道具
BaseProp <|-- BloodProp
BaseProp <|-- BombProp
BaseProp <|-- BulletProp
BaseProp <|-- BulletPlusProp

' ==================== 说明注释 ====================

note top of AbstractFlyingObject
  <b>顶层抽象类</b>
  所有可飞行对象的基类
  定义位置、速度、碰撞等基本行为
end note

note right of HeroAircraft
  <b>玩家角色</b>
  单例模式
  可切换射击策略
end note

note right of MobEnemy
  <b>敌机基类</b>
  持有分数属性
  四种敌机类型
end note

note bottom of BaseBullet
  <b>子弹系统</b>
  区分英雄/敌机子弹
end note

note bottom of BaseProp
  <b>道具系统</b>
  四种增益效果
end note

@enduml