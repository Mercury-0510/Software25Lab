@startuml strategy

interface ShootStrategy {
    + shoot(aircraft) : List<BaseBullet>
    + advance() : void
}

class LinearShootStrategy {
    - isHeroBullet : boolean
    + shoot(aircraft) : List<BaseBullet>
}

class CircularShootStrategy {
    - shootNum : int
    + shoot(aircraft) : List<BaseBullet>
}

class ScatterShootStrategy {
    - shootNum : int
    + shoot(aircraft) : List<BaseBullet>
}

class NoShootStrategy {
    + shoot(aircraft) : List<BaseBullet>
}

abstract class AbstractAircraft {
    # shootStrategy : ShootStrategy
    + setShootStrategy(strategy) : boolean
    + shoot() : List<BaseBullet>
}

class HeroAircraft {
    + shoot() : List<BaseBullet>
}

class Boss {
    + shoot() : List<BaseBullet>
}

ShootStrategy <|.. LinearShootStrategy
ShootStrategy <|.. CircularShootStrategy
ShootStrategy <|.. ScatterShootStrategy
ShootStrategy <|.. NoShootStrategy

AbstractAircraft o--> ShootStrategy
AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- Boss

note right of AbstractAircraft
  Context: 维护策略引用
  可动态切换策略
end note

@enduml